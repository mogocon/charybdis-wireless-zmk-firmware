name: Build Firmware

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build firmware
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - board: nice_nano_v2
            shield: charybdis_qwerty_left
            keymap: qwerty
            format: bt
          - board: nice_nano_v2
            shield: charybdis_qwerty_right
            keymap: qwerty
            format: bt
          - board: nice_nano_v2
            shield: charybdis_qwerty_dongle
            keymap: qwerty
            format: dongle
            artifact-name: charybdis_qwerty_dongle_usb_dongle
          - board: nice_nano_v2
            shield: settings_reset
            format: settings
            artifact-name: firmware_reset_nano_v2
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      
      - name: Set up ZMK environment
        run: |
          git clone https://github.com/zmkfirmware/zmk.git
          cd zmk
          west init -l app/
          west update
          west zephyr-export
      
      - name: Cache west modules
        uses: actions/cache@v3
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('zmk/app/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build gperf ccache dfu-util device-tree-compiler wget \
            python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
            make gcc gcc-multilib g++-multilib libsdl2-dev
          pip3 install --user -U west cmake
          pip3 install --user -U -r zmk/app/scripts/requirements.txt
      
      - name: Install Zephyr SDK
        run: |
          wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.3/zephyr-sdk-0.16.3_linux-x86_64.tar.xz
          tar xvf zephyr-sdk-0.16.3_linux-x86_64.tar.xz
          cd zephyr-sdk-0.16.3
          ./setup.sh -t arm-zephyr-eabi
      
      - name: Build firmware (${{ matrix.shield }} - ${{ matrix.board }})
        run: |
          export ZEPHYR_BASE=${GITHUB_WORKSPACE}/zmk/zephyr
          export ZEPHYR_SDK_INSTALL_DIR=${GITHUB_WORKSPACE}/zephyr-sdk-0.16.3
          
          # Create a build directory
          mkdir -p build
          
          # Copy your config into the ZMK directory
          mkdir -p config
          cp -r charybdis.keymap config/
          
          # Use matrix variables to build
          cd zmk/app
          west build --pristine -b ${{ matrix.board }} -- \
            -DZMK_CONFIG=${GITHUB_WORKSPACE}/config \
            -DSHIELD="${{ matrix.shield }}" \
            -DZMK_EXTRA_MODULES='${GITHUB_WORKSPACE}/charybdis-wireless-zmk-firmware'
        env:
          SHIELD: ${{ matrix.shield }}
          BOARD: ${{ matrix.board }}
          KEYMAP: ${{ matrix.keymap }}
          FORMAT: ${{ matrix.format }}
      
      - name: Archive firmware artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name || matrix.shield }}-${{ matrix.board }}-${{ github.run_id }}
          path: |
            zmk/app/build/zephyr/zmk.uf2
            zmk/app/build/zephyr/zmk.hex
