name: Build ZMK Firmware

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    container:
      image: zmkfirmware/zmk-build-arm:stable
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Cache west modules
        uses: actions/cache@v4
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            zmk/
          key: ${{ runner.os }}-modules-${{ hashFiles('config/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      
      - name: West Init
        run: west init -l config
      
      - name: West Update
        run: west update --stats
      
      - name: West Zephyr export
        run: west zephyr-export
      
      - name: Create Charybdis Module
        run: |
          # 기존 파일 정리 (중복 파일 방지)
          rm -rf config/modules
          
          # 디렉토리 생성
          mkdir -p config/modules/charybdis
          mkdir -p config/modules/charybdis/boards/shields/charybdis
          
          cat << 'EOF' > config/modules/charybdis/CMakeLists.txt
          if(CONFIG_SHIELD_CHARYBDIS_LEFT OR CONFIG_SHIELD_CHARYBDIS_RIGHT)
            zephyr_include_directories(.)
          endif()
          EOF
          
          cat << 'EOF' > config/modules/charybdis/Kconfig
          # Copyright (c) 2022 The ZMK Contributors
          # SPDX-License-Identifier: MIT
          
          config SHIELD_CHARYBDIS_LEFT
            def_bool $(shields_list_contains,charybdis_left)
          
          config SHIELD_CHARYBDIS_RIGHT
            def_bool $(shields_list_contains,charybdis_right)
          EOF
          
          cat << 'EOF' > config/modules/charybdis/Module.yml
          name: charybdis
          build:
            cmake-ext: CMakeLists.txt
            kconfig-ext: Kconfig
            settings:
              board:
                root: boards/shields
                board-root: boards/shields
          EOF
          
          cat << 'EOF' > config/modules/charybdis/boards/shields/charybdis/Kconfig.shield
          # Copyright (c) 2022 The ZMK Contributors
          # SPDX-License-Identifier: MIT
          
          config SHIELD_CHARYBDIS_LEFT
            def_bool $(shields_list_contains,charybdis_left)
          
          config SHIELD_CHARYBDIS_RIGHT
            def_bool $(shields_list_contains,charybdis_right)
          EOF
          
          cat << 'EOF' > config/modules/charybdis/boards/shields/charybdis/Kconfig.defconfig
          # Copyright (c) 2022 The ZMK Contributors
          # SPDX-License-Identifier: MIT
          
          if SHIELD_CHARYBDIS_LEFT
          
          config ZMK_KEYBOARD_NAME
          default "Charybdis"
          
          config ZMK_SPLIT_ROLE_CENTRAL
          default y
          
          endif
          
          if SHIELD_CHARYBDIS_LEFT || SHIELD_CHARYBDIS_RIGHT
          
          config ZMK_SPLIT
          default y
          
          endif
          EOF
          
          cat << 'EOF' > config/modules/charybdis/boards/shields/charybdis/charybdis.dtsi
          /*
           * Copyright (c) 2022 The ZMK Contributors
           *
           * SPDX-License-Identifier: MIT
           */
          
          #include <dt-bindings/zmk/matrix_transform.h>
          
          / {
              chosen {
                  zmk,kscan = &kscan0;
                  zmk,matrix_transform = &default_transform;
              };
          
              default_transform: keymap_transform_0 {
                  compatible = "zmk,matrix-transform";
                  columns = <12>;
                  rows = <4>;
                  map = <
          RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                 RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
          RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)                 RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
          RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)                 RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
          RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12) RC(3,13)
                                  RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10)
                  >;
              };
          
              kscan0: kscan {
                  compatible = "zmk,kscan-gpio-matrix";
                  label = "KSCAN";
                  diode-direction = "col2row";
              };
          
              left_encoder: encoder_left {
                  compatible = "alps,ec11";
                  label = "LEFT_ENCODER";
                  a-gpios = <&gpio1 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
                  b-gpios = <&gpio1 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
                  resolution = <4>;
                  status = "disabled";
              };
          
              right_encoder: encoder_right {
                  compatible = "alps,ec11";
                  label = "RIGHT_ENCODER";
                  a-gpios = <&gpio1 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
                  b-gpios = <&gpio1 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
                  resolution = <4>;
                  status = "disabled";
              };
          
              sensors {
                  compatible = "zmk,keymap-sensors";
                  sensors = <&left_encoder &right_encoder>;
                  triggers-per-rotation = <20>;
              };
          };
          EOF
          
          cat << 'EOF' > config/modules/charybdis/boards/shields/charybdis/charybdis_left.overlay
          /*
           * Copyright (c) 2022 The ZMK Contributors
           *
           * SPDX-License-Identifier: MIT
           */
          
          #include "charybdis.dtsi"
          
          &default_transform {
              col-offset = <0>;
          };
          
          &kscan0 {
              col-gpios
                  = <&gpio0 24 GPIO_ACTIVE_HIGH>
                  , <&gpio0 22 GPIO_ACTIVE_HIGH>
                  , <&gpio0 20 GPIO_ACTIVE_HIGH>
                  , <&gpio0 18 GPIO_ACTIVE_HIGH>
                  , <&gpio0 16 GPIO_ACTIVE_HIGH>
                  , <&gpio0 14 GPIO_ACTIVE_HIGH>
                  ;
          
              row-gpios
                  = <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                  , <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                  , <&gpio0 2  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                  , <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                  , <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                  ;
          };
          
          &left_encoder {
              status = "okay";
          };
          EOF
          
          cat << 'EOF' > config/modules/charybdis/boards/shields/charybdis/charybdis_right.overlay
          /*
           * Copyright (c) 2022 The ZMK Contributors
           *
           * SPDX-License-Identifier: MIT
           */
          
          #include "charybdis.dtsi"
          
          &default_transform {
              col-offset = <6>;
          };
          
          &kscan0 {
              col-gpios
                  = <&gpio0 14 GPIO_ACTIVE_HIGH>
                  , <&gpio0 16 GPIO_ACTIVE_HIGH>
                  , <&gpio0 18 GPIO_ACTIVE_HIGH>
                  , <&gpio0 20 GPIO_ACTIVE_HIGH>
                  , <&gpio0 22 GPIO_ACTIVE_HIGH>
                  , <&gpio0 24 GPIO_ACTIVE_HIGH>
                  ;
          
              row-gpios
                  = <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                  , <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                  , <&gpio0 2  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                  , <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                  , <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                  ;
          };
          
          &right_encoder {
              status = "okay";
          };
          EOF
      
      - name: Update west.yml to include charybdis module
        run: |
          cat << 'EOF' > config/west.yml
          manifest:
            remotes:
              - name: zmkfirmware
                url-base: https://github.com/zmkfirmware
            projects:
              - name: zmk
                remote: zmkfirmware
                revision: main
                import: app/west.yml
            self:
              path: config
              userdata:
                modules:
                  - name: charybdis
                    path: modules/charybdis
          EOF
      
      - name: Check Module Structure and Files
        run: |
          echo "===== 모듈 디렉토리 구조 ====="
          find config/modules -type f | sort
          
          echo -e "\n===== 모듈 파일 내용 확인 ====="
          echo "CMakeLists.txt:"
          cat config/modules/charybdis/CMakeLists.txt
          
          echo -e "\nModule.yml:"
          cat config/modules/charybdis/Module.yml
          
          echo -e "\nKconfig:"
          cat config/modules/charybdis/Kconfig
          
          echo -e "\nKconfig.shield:"
          cat config/modules/charybdis/boards/shields/charybdis/Kconfig.shield
          
          echo -e "\nKconfig.defconfig:"
          cat config/modules/charybdis/boards/shields/charybdis/Kconfig.defconfig
          
          echo -e "\nWest.yml 내용:"
          cat config/west.yml
      
      - name: West Build Debug Info
        run: |
          echo "===== 현재 작업 디렉토리 구조 ====="
          pwd
          ls -la
          
          echo -e "\n===== ZMK 설정 디렉토리 구조 ====="
          find config -type f | sort
          
          echo -e "\n===== West 모듈 정보 ====="
          west list
          
          echo -e "\n===== West 설정 정보 ====="
          west config -l
          
          echo -e "\n===== 사용 가능한 쉴드 목록 확인 ====="
          echo "아래 명령은 help 출력으로 모든 쉴드가 표시되지 않을 수 있습니다."
          west build -s zmk/app -b nice_nano_v2 -- --help 2>&1 || true
      
      - name: West Build (Charybdis Left Half)
        run: west build -s zmk/app -b nice_nano_v2 -- -DSHIELD=charybdis_left -DZMK_CONFIG="${GITHUB_WORKSPACE}/config"
      
      - name: Charybdis Left Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: charybdis_left-zmk-firmware
          path: build/zephyr/zmk.uf2
      
      - name: West Build (Charybdis Right Half)
        run: west build --pristine -s zmk/app -b nice_nano_v2 -- -DSHIELD=charybdis_right -DZMK_CONFIG="${GITHUB_WORKSPACE}/config"
      
      - name: Charybdis Right Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: charybdis_right-zmk-firmware
          path: build/zephyr/zmk.uf2